Setting 
{
    Blend SrcAlpha OneMinusSrcAlpha
    BlendOp Add
    Cull Back
    ZTest Less
    ZWrite On
}

Vertex
{
    Input
    {
        0 vec3 aPos       : POSITION
        1 vec2 aTexCoords : TEXCOORD
        2 vec3 aNormal    : NORMAL
    }

    Output
    {
        0 vec3 WorldPos  : TEXCOORD0
        1 vec3 Normal    : TEXCOORD1
        2 vec2 TexCoords : TEXCOORD2
    }

    Properties
    {
        using ENGINE_Model
        using ENGINE_View
        using ENGINE_Projection
        using ENGINE_Model_Inv
    }

    Program
    {
        void main()
        {
            WorldPos = to_vec3(mul(ENGINE_Model * vec4(aPos, 1.0)));
            Normal = mul(transpose(to_mat3(ENGINE_Model_Inv)) * aNormal);
            TexCoords = aTexCoords;
            ZX_Position = mul(ENGINE_Projection * ENGINE_View * ENGINE_Model * vec4(aPos, 1.0));
        }
    }
}

Fragment
{
    Input
    {
        0 vec3 WorldPos  : TEXCOORD0
        1 vec3 Normal    : TEXCOORD1
        2 vec2 TexCoords : TEXCOORD2
    }

    Output
    {
        0 vec4 G_Position : SV_Target0
        1 vec4 G_Normal   : SV_Target1
        2 vec4 G_Color    : SV_Target2
    }
    
    Properties
    {
        sampler2D _AlbedoMap
        sampler2D _NormalMap
    }

    Program
    {
        void main()
        {
            vec3 albedo = texture(_AlbedoMap, TexCoords).rgb;
            vec3 wNormal = texture(_NormalMap, TexCoords).rgb;
            wNormal = normalize(Normal);
            G_Position = vec4(WorldPos, 1.0);
            G_Normal = vec4(wNormal, 1.0);
            G_Color = vec4(albedo, 1.0);
        }
    }
}