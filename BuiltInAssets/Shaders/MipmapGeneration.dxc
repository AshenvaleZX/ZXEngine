#pragma pack_matrix(column_major)

Texture2D<float4> InputTexture : register(t0);
RWTexture2D<float4> OutputTexture : register(u0);

SamplerState _SampleLinearWrap       : register(s0);
SamplerState _SampleLinearClamp      : register(s1);
SamplerState _SampleAnisotropicWrap  : register(s2);
SamplerState _SampleAnisotropicClamp : register(s3);

[numthreads(8, 8, 1)]
void main(uint3 DTID : SV_DispatchThreadID)
{
    uint2 coord = DTID.xy;

    uint2 inputSize;
    InputTexture.GetDimensions(inputSize.x, inputSize.y);

    uint2 outputSize;
    OutputTexture.GetDimensions(outputSize.x, outputSize.y);

    if (coord.x >= outputSize.x || coord.y >= outputSize.y)
        return;

    float2 texelSize = 1.0 / float2(inputSize);
    float2 uv = (float2(coord) + 0.5) * 2.0 * texelSize;

    float4 color = 0.0;
    color += InputTexture.SampleLevel(_SampleLinearClamp, uv + float2(-texelSize.x, -texelSize.y), 0);
    color += InputTexture.SampleLevel(_SampleLinearClamp, uv + float2( texelSize.x, -texelSize.y), 0);
    color += InputTexture.SampleLevel(_SampleLinearClamp, uv + float2(-texelSize.x,  texelSize.y), 0);
    color += InputTexture.SampleLevel(_SampleLinearClamp, uv + float2( texelSize.x,  texelSize.y), 0);
    color *= 0.25;

    OutputTexture[coord] = color;
}