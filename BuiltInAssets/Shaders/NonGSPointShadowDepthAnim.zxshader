Setting 
{
    Blend SrcAlpha OneMinusSrcAlpha
    BlendOp Add
    Cull Front
    ZTest Less
    ZWrite On
}

Vertex
{
    Input
    {
        0 vec3  aPos    : POSITION
        4 vec4  aWeight : WEIGHT
        5 uvec4 aBoneID : BONEID
    }

    Output
    {
        0 vec4 FragPos : TEXCOORD0
    }

    Properties
    {
        using ENGINE_Model
        mat4 _ShadowMatrix
        mat4 _BoneMatrices[MAX_BONE_NUM]
    }

    Program
    {
        void main()
        {
            vec4 pos = vec4(0.0, 0.0, 0.0, 0.0);
            pos += mul(_BoneMatrices[aBoneID.r] * vec4(aPos, 1.0)) * aWeight.r;
            pos += mul(_BoneMatrices[aBoneID.g] * vec4(aPos, 1.0)) * aWeight.g;
            pos += mul(_BoneMatrices[aBoneID.b] * vec4(aPos, 1.0)) * aWeight.b;
            pos += mul(_BoneMatrices[aBoneID.a] * vec4(aPos, 1.0)) * aWeight.a;

            FragPos = mul(ENGINE_Model * pos);
            ZX_Position = mul(_ShadowMatrix * pos);
        }
    }
}

Fragment
{
    Input
    {
        0 vec4 FragPos : TEXCOORD0
    }

    Properties
    {
        vec3 _LightPos
        float _FarPlane
    }

    Program
    {
        void main()
        {
            float lightDistance = length(FragPos.xyz - _LightPos);
            
            // map to [0;1] range by dividing by _FarPlane
            lightDistance = lightDistance / _FarPlane;
            
            // write this as modified depth
            ZX_Depth = lightDistance;
        }
    }
}