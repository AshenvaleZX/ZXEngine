Vertex
{
    Input
    {
        0 vec3 aPos       : POSITION
        1 vec2 aTexCoords : TEXCOORD
    }

    Output
    {
        0 vec2 TexCoords : TEXCOORD0
    }

    Program
    {
        void main()
        {
            TexCoords = aTexCoords;    
            ZX_Position = vec4(aPos.x, aPos.y, 0.0, 1.0);
        }
    }
}

Fragment
{
    Input
    {
        0 vec2 TexCoords : TEXCOORD0
    }

    Output
    {
        0 vec4 FragColor : SV_Target
    }

    Properties
    {
        // 是否横向模糊
        bool _Horizontal
        // 采样偏移距离，1表示偏移1像素
        float _TexOffset
        // 原图
        sampler2D _RenderTexture
    }

    Program
    {
        // 简化后的高斯卷积核
        array<float, 5> weight = { 0.2270270270, 0.1945945946, 0.1216216216, 0.0540540541, 0.0162162162 };

        void main()
        {             
            vec2 texOffset = _TexOffset / textureSize(_RenderTexture, 0);
            vec3 color = texture(_RenderTexture, TexCoords).rgb * weight[0];
            if(_Horizontal)
            {
                for(int i = 1; i < 5; ++i)
                {
                    color += texture(_RenderTexture, TexCoords + vec2(texOffset.x * i, 0.0)).rgb * weight[i];
                    color += texture(_RenderTexture, TexCoords - vec2(texOffset.x * i, 0.0)).rgb * weight[i];
                }
            }
            else
            {
                for(int i = 1; i < 5; ++i)
                {
                    color += texture(_RenderTexture, TexCoords + vec2(0.0, texOffset.y * i)).rgb * weight[i];
                    color += texture(_RenderTexture, TexCoords - vec2(0.0, texOffset.y * i)).rgb * weight[i];
                }
            }
            FragColor = vec4(color, 1.0);
        }
    }
}